{"version":3,"sources":["react-editor.js","components/Item.js","index.js","pages/Home.js","pages/Basic.js","components/Text.js","components/List.js"],"names":["context","inEditor","EditorContextHelper","setContextProp","prop","key","value","console","error","EditablePage","refresh","node","content","commentClose","log","commentOpen","TemplateAnnotations","getPageCommentString","templateDefinition","parentNode","insertBefore","document","createComment","nextSibling","insertComments","ReactDOM","findDOMNode","this","props","config","templateDefinitions","component","componentMappings","getComponentMapping","React","createElement","PureComponent","Item","title","main","header","metadata","parentTemplateId","text","list","item","App","state","pathname","window","location","fetch","replace","RegExp","pagesRes","json","page","templateDefinitionsRes","headerRes","setState","Component","render","StrictMode","getElementById"],"mappings":"yMAIMA,EAAU,GACVC,EAAWC,sBAAoBD,WAkBrC,SAASE,EAAeC,GAAO,IACrBC,EAAeD,EAAfC,IAAKC,EAAUF,EAAVE,MAEb,IAAKA,EAAO,OAAOC,QAAQC,MAAM,iBAAmBH,GAEpDL,EAAQK,GAAOC,E,IAUXG,E,mLAEFP,sBAAoBQ,Y,2CAjCxB,SAAwBC,EAAMC,EAASC,GAIrC,GAHAN,QAAQO,IAAIb,GACZM,QAAQO,IAAIH,GAERV,GAAYU,EAAM,CACpB,IAAMI,EAAcC,sBAAoBC,qBAAqBL,EAASZ,EAAQkB,oBAE9EX,QAAQO,IAAIC,GAERA,IACFJ,EAAKQ,WAAWC,aAAaC,SAASC,cAAcP,GAAcJ,GAClEA,EAAKQ,WAAWC,aAAaC,SAASC,cAAcT,GAAeF,EAAKY,eA0B1EC,CAAeC,IAASC,YAAYC,MAAOA,KAAKC,MAAMhB,QAAS,e,+BAGvD,IAAD,EAC+Ce,KAAKC,MADpD,IACChB,eADD,MACW,GADX,EACeiB,EADf,EACeA,OAAQC,EADvB,EACuBA,oBAE9B3B,EAAe,CAAEE,IAAK,SAAUC,MAAOuB,IAEnC5B,GAAUE,EAAe,CAAEE,IAAK,sBAAuBC,MAAOwB,IAElE,IAAMC,EAvBV,SAA6BpB,GAC3B,IAAMN,EAAMM,EAAK,iBAGjB,OAFcX,EAAQ6B,OAAOG,kBAAkB3B,IAExBE,QAAQC,MAAM,kCAAoCH,GAmBrD4B,CAAoBrB,GAEtC,OAAOmB,EAAYG,IAAMC,cAAcJ,EAAWnB,GAAW,S,GAlBtCsB,IAAME,e,OChClBC,ICMTR,EAAS,CACbG,kBAAmB,CACjB,oBCXJ,SAAcJ,GAAQ,IACZU,EAAkCV,EAAlCU,MAER,OAF0CV,EAA3BW,KAA2BX,EAArBY,OAAqBZ,EAAba,SAG3B,8BACE,6BAAKH,ODOP,qBEZJ,SAAeV,GAAQ,IACbU,EAA0BV,EAA1BU,MAAOC,EAAmBX,EAAnBW,KAAME,EAAab,EAAba,SAErB,OACE,gCACE,6BAAKH,IACJC,GAAQ,cAAC,eAAD,CAAc3B,QAAS2B,EAAMG,iBAAkBD,EAAS,uBFOnE,yBGdJ,SAAcb,GACZ,OAAO,8BAAMA,EAAMe,QHcjB,yBIdJ,SAAcf,GAAQ,IACZgB,EAAmBhB,EAAnBgB,KAAMH,EAAab,EAAba,SAEd,OAAO,6BAAKG,GAAQ,cAAC,eAAD,CAAchC,QAASgC,EAAMF,iBAAkBD,EAAS,sBJY1E,yBDhBJ,SAAcb,GACZ,OAAO,6BAAKA,EAAMiB,UCmBdC,E,4MACJC,MAAQ,G,qMAGAC,EAAWC,OAAOC,SAASF,S,SAGVG,MACrB,gDAEEH,EAASI,QAAQ,IAAIC,OAAO,qBAA8B,KAAM,K,cAH9DC,E,gBAKaA,EAASC,O,UAAtBC,E,QAEFtD,sBAAoBD,W,kCACekD,MACnC,+CAAiDK,EAAK,kB,eADlDC,E,iBAIsBA,EAAuBF,O,QAAnDzB,E,kBAGe,kCAAbkB,E,kCACsBG,MAAM,wD,eAAxBO,E,iBAESA,EAAUH,O,QAAzBf,E,eAGFb,KAAKgC,SAAS,CAAEH,OAAM1B,sBAAqBU,W,sIAGnC,IAAD,EACuCb,KAAKoB,MAA3CS,EADD,EACCA,KAAM1B,EADP,EACOA,oBADP,EAC4BU,OAEnC,OACE,8BAEGgB,GAAQ3B,GAAU,cAAC,EAAD,CAAcjB,QAAS4C,EAAM3B,OAAQA,EAAQC,oBAAqBA,U,GArC3EI,IAAM0B,WA2CxBnC,IAASoC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAAS0C,eAAe,W","file":"static/js/main.3a2295d3.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { EditorContextHelper, TemplateAnnotations } from '@magnolia/template-annotations';\n\nconst context = {};\nconst inEditor = EditorContextHelper.inEditor();\n\nfunction insertComments(node, content, commentClose) {\n  console.log(inEditor);\n  console.log(node);\n\n  if (inEditor && node) {\n    const commentOpen = TemplateAnnotations.getPageCommentString(content, context.templateDefinition);\n\n    console.log(commentOpen);\n\n    if (commentOpen) {\n      node.parentNode.insertBefore(document.createComment(commentOpen), node);\n      node.parentNode.insertBefore(document.createComment(commentClose), node.nextSibling);\n    }\n  }\n}\n\nfunction setContextProp(prop) {\n  const { key, value } = prop;\n\n  if (!value) return console.error('Missing prop: ' + key);\n\n  context[key] = value;\n}\n\nfunction getComponentMapping(node) {\n  const key = node['mgnl:template'];\n  const value = context.config.componentMappings[key];\n\n  return value ? value : console.error('Missing component mapping for: ' + key);\n}\n\nclass EditablePage extends React.PureComponent {\n  componentDidUpdate() {\n    EditorContextHelper.refresh();\n  }\n\n  componentDidMount() {\n    insertComments(ReactDOM.findDOMNode(this), this.props.content, '/cms:page');\n  }\n\n  render() {\n    const { content = {}, config, templateDefinitions } = this.props;\n\n    setContextProp({ key: 'config', value: config });\n\n    if (inEditor) setContextProp({ key: 'templateDefinitions', value: templateDefinitions });\n\n    const component = getComponentMapping(content);\n\n    return component ? React.createElement(component, content) : null;\n  }\n}\n\nexport { EditablePage };\n","import React from 'react';\n\nfunction Item(props) {\n  return <li>{props.item}</li>;\n}\n\nexport default Item;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { EditableArea, EditorContextHelper } from '@magnolia/react-editor';\nimport { EditorContextHelper } from '@magnolia/template-annotations';\nimport { EditablePage } from './react-editor';\nimport Home from './pages/Home';\nimport Basic from './pages/Basic';\nimport Text from './components/Text';\nimport List from './components/List';\nimport Item from './components/Item';\n\nconst nodeName = 'spa-home';\nconst config = {\n  componentMappings: {\n    'spa-lm:pages/Home': Home,\n    'spa-lm:pages/Basic': Basic,\n    'spa-lm:components/Text': Text,\n    'spa-lm:components/List': List,\n    'spa-lm:components/Item': Item,\n  },\n};\n\nclass App extends React.Component {\n  state = {};\n\n  async componentDidMount() {\n    const pathname = window.location.pathname;\n    let templateDefinitions;\n    let header;\n    const pagesRes = await fetch(\n      '/magnoliaAuthor/.rest/delivery/pages/' +\n        nodeName +\n        pathname.replace(new RegExp('(.*' + nodeName + '|.html)', 'g'), '')\n    );\n    const page = await pagesRes.json();\n\n    if (EditorContextHelper.inEditor()) {\n      const templateDefinitionsRes = await fetch(\n        '/magnoliaAuthor/.rest/templateDefinition/v1/' + page['mgnl:template']\n      );\n\n      templateDefinitions = await templateDefinitionsRes.json();\n    }\n\n    if (pathname !== '/magnoliaAuthor/' + nodeName + '.html') {\n      const headerRes = await fetch('/magnoliaAuthor/.rest/delivery/pages/' + nodeName + '/header');\n\n      header = await headerRes.json();\n    }\n\n    this.setState({ page, templateDefinitions, header });\n  }\n\n  render() {\n    const { page, templateDefinitions, header } = this.state;\n\n    return (\n      <div>\n        {/* {header && <EditableArea content={header} />} */}\n        {page && config && <EditablePage content={page} config={config} templateDefinitions={templateDefinitions} />}\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport { EditableArea } from '@magnolia/react-editor';\n\nfunction Home(props) {\n  const { title, main, header, metadata } = props;\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      {/* {header && <EditableArea content={header} parentTemplateId={metadata['mgnl:template']} />}\n      {main && <EditableArea content={main} parentTemplateId={metadata['mgnl:template']} />} */}\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { EditableArea } from '@magnolia/react-editor';\n\nfunction Basic(props) {\n  const { title, main, metadata } = props;\n\n  return (\n    <div>\n      <h1>{title}</h1>\n      {main && <EditableArea content={main} parentTemplateId={metadata['mgnl:template']} />}\n    </div>\n  );\n}\n\nexport default Basic;\n","import React from 'react';\n\nfunction Text(props) {\n  return <div>{props.text}</div>;\n}\n\nexport default Text;\n","import React from 'react';\nimport { EditableArea } from '@magnolia/react-editor';\n\nfunction List(props) {\n  const { list, metadata } = props;\n\n  return <ul>{list && <EditableArea content={list} parentTemplateId={metadata['mgnl:template']} />}</ul>;\n}\n\nexport default List;\n"],"sourceRoot":""}